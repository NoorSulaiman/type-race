{"version":3,"sources":["../../../src/typeRace/handlers/roundHandler.js"],"names":["roundHandler","players","newPlayers","slice","words","socket","_eventsCount","console","log","on","emit","text","user","username","map","player","rounds","length","reduce","a","b","email","push"],"mappings":"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","file":"roundHandler.js","sourcesContent":["import randomWords from 'random-words';\n\nexport function roundHandler(players) {\n    const newPlayers = players.slice(-2);\n    const words = randomWords(3);\n\n    if (newPlayers[0].socket._eventsCount < 5) {\n        console.log('from roundHandler');\n\n        //text stream\n        newPlayers[0].socket.on('typing', text => {\n            newPlayers[1].socket.emit('other-typing', text)\n        })\n        newPlayers[1].socket.on('typing', text => {\n            newPlayers[0].socket.emit('other-typing', text)\n        })\n        //game start\n        newPlayers[0].socket.emit('game-start', newPlayers[1].user.username)\n        newPlayers[1].socket.emit('game-start', newPlayers[0].user.username)\n        newPlayers.map(player => {\n            player.socket.on('start-rounds', () => {\n                if (player.rounds.length === 0) {\n                    player.socket.emit('round-1', words[0])\n                } else if (player.rounds.length === 1) {\n                    player.socket.emit('round-2', words[1])\n                } else if (player.rounds.length === 2) {\n                    player.socket.emit('round-3', words[2])\n                }\n                else {\n                    const rounds = player.rounds.reduce((a, b) => a + b, 0)\n                    player.socket.emit('game-end', rounds)\n                }\n            })\n            player.socket.on('round-1-end', (email) => {\n                if (newPlayers[0].user.email === email) {\n                    newPlayers[0].rounds.push(1)\n                    newPlayers[1].rounds.push(0)\n                    newPlayers[0].socket.emit('youWin')\n                    newPlayers[1].socket.emit('youLose')\n                } else {\n                    newPlayers[1].rounds.push(1)\n                    newPlayers[0].rounds.push(0)\n                    newPlayers[1].socket.emit('youWin')\n                    newPlayers[0].socket.emit('youLose')\n                }\n                newPlayers.map(player => {\n                    player.socket.emit('round-2', words[1])\n                })\n            })\n            player.socket.on('round-2-end', (email) => {\n                if (newPlayers[0].user.email === email) {\n                    newPlayers[0].rounds.push(1)\n                    newPlayers[1].rounds.push(0)\n                    newPlayers[0].socket.emit('youWin')\n                    newPlayers[1].socket.emit('youLose')\n                } else {\n                    newPlayers[1].rounds.push(1)\n                    newPlayers[0].rounds.push(0)\n                    newPlayers[1].socket.emit('youWin')\n                    newPlayers[0].socket.emit('youLose')\n                }\n                newPlayers.map(player => {\n                    player.socket.emit('round-3', words[2])\n                })\n            })\n            player.socket.on('round-3-end', (email) => {\n                if (newPlayers[0].user.email === email) {\n                    newPlayers[0].rounds.push(1)\n                    newPlayers[1].rounds.push(0)\n                    newPlayers[0].socket.emit('youWin')\n                    newPlayers[1].socket.emit('youLose')\n                } else {\n                    newPlayers[1].rounds.push(1)\n                    newPlayers[0].rounds.push(0)\n                    newPlayers[1].socket.emit('youWin')\n                    newPlayers[0].socket.emit('youLose')\n                }\n                newPlayers.map(player => {\n                    const rounds = player.rounds.reduce((a, b) => a + b, 0)\n                    player.socket.emit('game-end', rounds)\n                })\n            })\n        })\n\n    }\n}"]}