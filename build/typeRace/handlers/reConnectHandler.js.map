{"version":3,"sources":["../../../src/typeRace/handlers/reConnectHandler.js"],"names":["reConnectHandler","user","players","socket","words","slice","map","player","indx","email","pop","length","on","emit","text","username","rounds","reduce","a","b","push"],"mappings":";;;;;QAEgBA,gB,GAAAA,gB;;AAFhB;;;;;;AAEO,SAASA,gBAAT,CAA0BC,IAA1B,EAAgCC,OAAhC,EAAyCC,MAAzC,EAAiD;AACpD,QAAMC,QAAQ,2BAAY,CAAZ,CAAd;AACAF,YAAQG,KAAR,CAAc,CAAd,EAAiB,CAAE,CAAnB,EAAsBC,GAAtB,CAA0B,UAACC,MAAD,EAASC,IAAT,EAAkB;AACxC,YAAID,OAAON,IAAP,CAAYQ,KAAZ,KAAsBR,KAAKQ,KAA/B,EAAsC;AAClCP,oBAAQQ,GAAR;AACAH,mBAAOJ,MAAP,GAAgBA,MAAhB;AACA,gBAAI,EAAGK,SAAUN,QAAQS,MAAR,GAAiB,CAA5B,IAAoCT,QAAQS,MAAR,GAAiB,CAAjB,KAAuB,CAA7D,CAAJ,EAAsE;AAClE,oBAAI,CAACH,OAAO,CAAR,IAAa,CAAb,KAAmB,CAAvB,EAA0B;AACtBD,2BAAOJ,MAAP,CAAcS,EAAd,CAAiB,QAAjB,EAA2B,gBAAQ;AAC/BV,gCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,cAA9B,EAA8CC,IAA9C;AACH,qBAFD;AAGAP,2BAAOJ,MAAP,CAAcU,IAAd,CAAmB,YAAnB,EAAiCX,QAAQM,OAAO,CAAf,EAAkBP,IAAlB,CAAuBc,QAAxD;AACAb,4BAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,YAA9B,EAA4CN,OAAON,IAAP,CAAYc,QAAxD;AACAR,2BAAOJ,MAAP,CAAcS,EAAd,CAAiB,cAAjB,EAAiC,YAAM;AACnC,4BAAIL,OAAOS,MAAP,CAAcL,MAAd,KAAyB,CAA7B,EAAgC;AAC5BJ,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,SAAnB,EAA8BT,MAAM,CAAN,CAA9B;AACAF,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,SAA9B,EAAyCT,MAAM,CAAN,CAAzC;AACH,yBAHD,MAGO,IAAIG,OAAOS,MAAP,CAAcL,MAAd,KAAyB,CAA7B,EAAgC;AACnCJ,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,SAAnB,EAA8BT,MAAM,CAAN,CAA9B;AACAF,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,SAA9B,EAAyCT,MAAM,CAAN,CAAzC;AACH,yBAHM,MAGA,IAAIG,OAAOS,MAAP,CAAcL,MAAd,KAAyB,CAA7B,EAAgC;AACnCJ,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,SAAnB,EAA8BT,MAAM,CAAN,CAA9B;AACAF,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,SAA9B,EAAyCT,MAAM,CAAN,CAAzC;AACH,yBAHM,MAIF;AACD,gCAAMY,SAAST,OAAOS,MAAP,CAAcC,MAAd,CAAqB,UAACC,CAAD,EAAIC,CAAJ;AAAA,uCAAUD,IAAIC,CAAd;AAAA,6BAArB,EAAsC,CAAtC,CAAf;AACAZ,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,UAAnB,EAA+BG,MAA/B;AACH;AACJ,qBAfD;AAgBAT,2BAAOJ,MAAP,CAAcS,EAAd,CAAiB,aAAjB,EAAgC,UAACH,KAAD,EAAW;AACvC,4BAAIF,OAAON,IAAP,CAAYQ,KAAZ,KAAsBA,KAA1B,EAAiC;AAC7BF,mCAAOS,MAAP,CAAcI,IAAd,CAAmB,CAAnB;AACAlB,oCAAQM,OAAO,CAAf,EAAkBQ,MAAlB,CAAyBI,IAAzB,CAA8B,CAA9B;AACAb,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,QAAnB;AACAX,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,SAA9B;AACH,yBALD,MAKO;AACHX,oCAAQM,OAAO,CAAf,EAAkBQ,MAAlB,CAAyBI,IAAzB,CAA8B,CAA9B;AACAb,mCAAOS,MAAP,CAAcI,IAAd,CAAmB,CAAnB;AACAlB,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,QAA9B;AACAN,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,SAAnB;AACH;AACD,yBAACN,MAAD,EAASL,QAAQM,OAAO,CAAf,CAAT,EAA4BF,GAA5B,CAAgC,kBAAU;AACtCC,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,SAAnB,EAA8BT,MAAM,CAAN,CAA9B;AACH,yBAFD;AAGH,qBAfD;AAgBAG,2BAAOJ,MAAP,CAAcS,EAAd,CAAiB,aAAjB,EAAgC,UAACH,KAAD,EAAW;AACvC,4BAAIF,OAAON,IAAP,CAAYQ,KAAZ,KAAsBA,KAA1B,EAAiC;AAC7BF,mCAAOS,MAAP,CAAcI,IAAd,CAAmB,CAAnB;AACAlB,oCAAQM,OAAO,CAAf,EAAkBQ,MAAlB,CAAyBI,IAAzB,CAA8B,CAA9B;AACAb,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,QAAnB;AACAX,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,SAA9B;AACH,yBALD,MAKO;AACHX,oCAAQM,OAAO,CAAf,EAAkBQ,MAAlB,CAAyBI,IAAzB,CAA8B,CAA9B;AACAb,mCAAOS,MAAP,CAAcI,IAAd,CAAmB,CAAnB;AACAlB,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,QAA9B;AACAN,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,SAAnB;AACH;AACD,yBAACN,MAAD,EAASL,QAAQM,OAAO,CAAf,CAAT,EAA4BF,GAA5B,CAAgC,kBAAU;AACtCC,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,SAAnB,EAA8BT,MAAM,CAAN,CAA9B;AACH,yBAFD;AAGH,qBAfD;AAgBAG,2BAAOJ,MAAP,CAAcS,EAAd,CAAiB,aAAjB,EAAgC,UAACH,KAAD,EAAW;AACvC,4BAAIF,OAAON,IAAP,CAAYQ,KAAZ,KAAsBA,KAA1B,EAAiC;AAC7BF,mCAAOS,MAAP,CAAcI,IAAd,CAAmB,CAAnB;AACAlB,oCAAQM,OAAO,CAAf,EAAkBQ,MAAlB,CAAyBI,IAAzB,CAA8B,CAA9B;AACAb,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,QAAnB;AACAX,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,SAA9B;AACH,yBALD,MAKO;AACHX,oCAAQM,OAAO,CAAf,EAAkBQ,MAAlB,CAAyBI,IAAzB,CAA8B,CAA9B;AACAb,mCAAOS,MAAP,CAAcI,IAAd,CAAmB,CAAnB;AACAlB,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,QAA9B;AACAN,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,SAAnB;AACH;AACD,yBAACN,MAAD,EAASL,QAAQM,OAAO,CAAf,CAAT,EAA4BF,GAA5B,CAAgC,kBAAU;AACtC,gCAAMU,SAAST,OAAOS,MAAP,CAAcC,MAAd,CAAqB,UAACC,CAAD,EAAIC,CAAJ;AAAA,uCAAUD,IAAIC,CAAd;AAAA,6BAArB,EAAsC,CAAtC,CAAf;AACAZ,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,UAAnB,EAA+BG,MAA/B;AACH,yBAHD;AAIH,qBAhBD;AAiBH,iBAvED,MAyEK,IAAIR,OAAO,CAAP,KAAa,CAAjB,EAAoB;AACrBD,2BAAOJ,MAAP,CAAcS,EAAd,CAAiB,QAAjB,EAA2B,gBAAQ;AAC/BV,gCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,cAA9B,EAA8CC,IAA9C;AACH,qBAFD;AAGAP,2BAAOJ,MAAP,CAAcU,IAAd,CAAmB,YAAnB,EAAiCX,QAAQM,OAAO,CAAf,EAAkBP,IAAlB,CAAuBc,QAAxD;AACAb,4BAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,YAA9B,EAA4CN,OAAON,IAAP,CAAYc,QAAxD;AACAR,2BAAOJ,MAAP,CAAcS,EAAd,CAAiB,cAAjB,EAAiC,YAAM;AACnC,4BAAIL,OAAOS,MAAP,CAAcL,MAAd,KAAyB,CAA7B,EAAgC;AAC5BJ,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,SAAnB,EAA8BT,MAAM,CAAN,CAA9B;AACAF,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,SAA9B,EAAyCT,MAAM,CAAN,CAAzC;AACH,yBAHD,MAGO,IAAIG,OAAOS,MAAP,CAAcL,MAAd,KAAyB,CAA7B,EAAgC;AACnCJ,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,SAAnB,EAA8BT,MAAM,CAAN,CAA9B;AACAF,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,SAA9B,EAAyCT,MAAM,CAAN,CAAzC;AACH,yBAHM,MAGA,IAAIG,OAAOS,MAAP,CAAcL,MAAd,KAAyB,CAA7B,EAAgC;AACnCJ,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,SAAnB,EAA8BT,MAAM,CAAN,CAA9B;AACAF,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,SAA9B,EAAyCT,MAAM,CAAN,CAAzC;AACH,yBAHM,MAIF;AACD,gCAAMY,SAAST,OAAOS,MAAP,CAAcC,MAAd,CAAqB,UAACC,CAAD,EAAIC,CAAJ;AAAA,uCAAUD,IAAIC,CAAd;AAAA,6BAArB,EAAsC,CAAtC,CAAf;AACAZ,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,UAAnB,EAA+BG,MAA/B;AACH;AACJ,qBAfD;AAgBAT,2BAAOJ,MAAP,CAAcS,EAAd,CAAiB,aAAjB,EAAgC,UAACH,KAAD,EAAW;AACvC,4BAAIF,OAAON,IAAP,CAAYQ,KAAZ,KAAsBA,KAA1B,EAAiC;AAC7BF,mCAAOS,MAAP,CAAcI,IAAd,CAAmB,CAAnB;AACAlB,oCAAQM,OAAO,CAAf,EAAkBQ,MAAlB,CAAyBI,IAAzB,CAA8B,CAA9B;AACAb,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,QAAnB;AACAX,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,SAA9B;AACH,yBALD,MAKO;AACHX,oCAAQM,OAAO,CAAf,EAAkBQ,MAAlB,CAAyBI,IAAzB,CAA8B,CAA9B;AACAb,mCAAOS,MAAP,CAAcI,IAAd,CAAmB,CAAnB;AACAlB,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,QAA9B;AACAN,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,SAAnB;AACH;AACD,yBAACN,MAAD,EAASL,QAAQM,OAAO,CAAf,CAAT,EAA4BF,GAA5B,CAAgC,kBAAU;AACtCC,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,SAAnB,EAA8BT,MAAM,CAAN,CAA9B;AACH,yBAFD;AAGH,qBAfD;AAgBAG,2BAAOJ,MAAP,CAAcS,EAAd,CAAiB,aAAjB,EAAgC,UAACH,KAAD,EAAW;AACvC,4BAAIF,OAAON,IAAP,CAAYQ,KAAZ,KAAsBA,KAA1B,EAAiC;AAC7BF,mCAAOS,MAAP,CAAcI,IAAd,CAAmB,CAAnB;AACAlB,oCAAQM,OAAO,CAAf,EAAkBQ,MAAlB,CAAyBI,IAAzB,CAA8B,CAA9B;AACAb,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,QAAnB;AACAX,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,SAA9B;AACH,yBALD,MAKO;AACHX,oCAAQM,OAAO,CAAf,EAAkBQ,MAAlB,CAAyBI,IAAzB,CAA8B,CAA9B;AACAb,mCAAOS,MAAP,CAAcI,IAAd,CAAmB,CAAnB;AACAlB,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,QAA9B;AACAN,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,SAAnB;AACH;AACD,yBAACN,MAAD,EAASL,QAAQM,OAAO,CAAf,CAAT,EAA4BF,GAA5B,CAAgC,kBAAU;AACtCC,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,SAAnB,EAA8BT,MAAM,CAAN,CAA9B;AACH,yBAFD;AAGH,qBAfD;AAgBAG,2BAAOJ,MAAP,CAAcS,EAAd,CAAiB,aAAjB,EAAgC,UAACH,KAAD,EAAW;AACvC,4BAAIF,OAAON,IAAP,CAAYQ,KAAZ,KAAsBA,KAA1B,EAAiC;AAC7BF,mCAAOS,MAAP,CAAcI,IAAd,CAAmB,CAAnB;AACAlB,oCAAQM,OAAO,CAAf,EAAkBQ,MAAlB,CAAyBI,IAAzB,CAA8B,CAA9B;AACAb,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,QAAnB;AACAX,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,SAA9B;AACH,yBALD,MAKO;AACHX,oCAAQM,OAAO,CAAf,EAAkBQ,MAAlB,CAAyBI,IAAzB,CAA8B,CAA9B;AACAb,mCAAOS,MAAP,CAAcI,IAAd,CAAmB,CAAnB;AACAlB,oCAAQM,OAAO,CAAf,EAAkBL,MAAlB,CAAyBU,IAAzB,CAA8B,QAA9B;AACAN,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,SAAnB;AACH;AACD,yBAACN,MAAD,EAASL,QAAQM,OAAO,CAAf,CAAT,EAA4BF,GAA5B,CAAgC,kBAAU;AACtC,gCAAMU,SAAST,OAAOS,MAAP,CAAcC,MAAd,CAAqB,UAACC,CAAD,EAAIC,CAAJ;AAAA,uCAAUD,IAAIC,CAAd;AAAA,6BAArB,EAAsC,CAAtC,CAAf;AACAZ,mCAAOJ,MAAP,CAAcU,IAAd,CAAmB,UAAnB,EAA+BG,MAA/B;AACH,yBAHD;AAIH,qBAhBD;AAiBH;AAEJ;AACJ;AACJ,KAzJD;AA2JH","file":"reConnectHandler.js","sourcesContent":["import randomWords from 'random-words';\n\nexport function reConnectHandler(user, players, socket) {\n    const words = randomWords(3)\n    players.slice(0, - 1).map((player, indx) => {\n        if (player.user.email === user.email) {\n            players.pop()\n            player.socket = socket;\n            if (!((indx === (players.length - 1)) && (players.length % 2 !== 0))) {\n                if ((indx + 1) % 2 === 0) {\n                    player.socket.on('typing', text => {\n                        players[indx - 1].socket.emit('other-typing', text)\n                    })\n                    player.socket.emit('game-start', players[indx - 1].user.username)\n                    players[indx - 1].socket.emit('game-start', player.user.username)\n                    player.socket.on('start-rounds', () => {\n                        if (player.rounds.length === 0) {\n                            player.socket.emit('round-1', words[0])\n                            players[indx - 1].socket.emit('round-1', words[0])\n                        } else if (player.rounds.length === 1) {\n                            player.socket.emit('round-2', words[1])\n                            players[indx - 1].socket.emit('round-2', words[1])\n                        } else if (player.rounds.length === 2) {\n                            player.socket.emit('round-3', words[2])\n                            players[indx - 1].socket.emit('round-3', words[2])\n                        }\n                        else {\n                            const rounds = player.rounds.reduce((a, b) => a + b, 0)\n                            player.socket.emit('game-end', rounds)\n                        }\n                    })\n                    player.socket.on('round-1-end', (email) => {\n                        if (player.user.email === email) {\n                            player.rounds.push(1)\n                            players[indx - 1].rounds.push(0)\n                            player.socket.emit('youWin')\n                            players[indx - 1].socket.emit('youLose')\n                        } else {\n                            players[indx - 1].rounds.push(1)\n                            player.rounds.push(0)\n                            players[indx - 1].socket.emit('youWin')\n                            player.socket.emit('youLose')\n                        }\n                        [player, players[indx - 1]].map(player => {\n                            player.socket.emit('round-2', words[1])\n                        })\n                    })\n                    player.socket.on('round-2-end', (email) => {\n                        if (player.user.email === email) {\n                            player.rounds.push(1)\n                            players[indx - 1].rounds.push(0)\n                            player.socket.emit('youWin')\n                            players[indx - 1].socket.emit('youLose')\n                        } else {\n                            players[indx - 1].rounds.push(1)\n                            player.rounds.push(0)\n                            players[indx - 1].socket.emit('youWin')\n                            player.socket.emit('youLose')\n                        }\n                        [player, players[indx - 1]].map(player => {\n                            player.socket.emit('round-3', words[2])\n                        })\n                    })\n                    player.socket.on('round-3-end', (email) => {\n                        if (player.user.email === email) {\n                            player.rounds.push(1)\n                            players[indx - 1].rounds.push(0)\n                            player.socket.emit('youWin')\n                            players[indx - 1].socket.emit('youLose')\n                        } else {\n                            players[indx - 1].rounds.push(1)\n                            player.rounds.push(0)\n                            players[indx - 1].socket.emit('youWin')\n                            player.socket.emit('youLose')\n                        }\n                        [player, players[indx - 1]].map(player => {\n                            const rounds = player.rounds.reduce((a, b) => a + b, 0)\n                            player.socket.emit('game-end', rounds)\n                        })\n                    })\n                }\n\n                else if (indx % 2 === 0) {\n                    player.socket.on('typing', text => {\n                        players[indx + 1].socket.emit('other-typing', text)\n                    })\n                    player.socket.emit('game-start', players[indx + 1].user.username)\n                    players[indx + 1].socket.emit('game-start', player.user.username)\n                    player.socket.on('start-rounds', () => {\n                        if (player.rounds.length === 0) {\n                            player.socket.emit('round-1', words[0])\n                            players[indx + 1].socket.emit('round-1', words[0])\n                        } else if (player.rounds.length === 1) {\n                            player.socket.emit('round-2', words[1])\n                            players[indx + 1].socket.emit('round-2', words[1])\n                        } else if (player.rounds.length === 2) {\n                            player.socket.emit('round-3', words[2])\n                            players[indx + 1].socket.emit('round-3', words[2])\n                        }\n                        else {\n                            const rounds = player.rounds.reduce((a, b) => a + b, 0)\n                            player.socket.emit('game-end', rounds)\n                        }\n                    })\n                    player.socket.on('round-1-end', (email) => {\n                        if (player.user.email === email) {\n                            player.rounds.push(1)\n                            players[indx + 1].rounds.push(0)\n                            player.socket.emit('youWin')\n                            players[indx + 1].socket.emit('youLose')\n                        } else {\n                            players[indx + 1].rounds.push(1)\n                            player.rounds.push(0)\n                            players[indx + 1].socket.emit('youWin')\n                            player.socket.emit('youLose')\n                        }\n                        [player, players[indx + 1]].map(player => {\n                            player.socket.emit('round-2', words[1])\n                        })\n                    })\n                    player.socket.on('round-2-end', (email) => {\n                        if (player.user.email === email) {\n                            player.rounds.push(1)\n                            players[indx + 1].rounds.push(0)\n                            player.socket.emit('youWin')\n                            players[indx + 1].socket.emit('youLose')\n                        } else {\n                            players[indx + 1].rounds.push(1)\n                            player.rounds.push(0)\n                            players[indx + 1].socket.emit('youWin')\n                            player.socket.emit('youLose')\n                        }\n                        [player, players[indx + 1]].map(player => {\n                            player.socket.emit('round-3', words[2])\n                        })\n                    })\n                    player.socket.on('round-3-end', (email) => {\n                        if (player.user.email === email) {\n                            player.rounds.push(1)\n                            players[indx + 1].rounds.push(0)\n                            player.socket.emit('youWin')\n                            players[indx + 1].socket.emit('youLose')\n                        } else {\n                            players[indx + 1].rounds.push(1)\n                            player.rounds.push(0)\n                            players[indx + 1].socket.emit('youWin')\n                            player.socket.emit('youLose')\n                        }\n                        [player, players[indx + 1]].map(player => {\n                            const rounds = player.rounds.reduce((a, b) => a + b, 0)\n                            player.socket.emit('game-end', rounds)\n                        })\n                    })\n                }\n\n            }\n        }\n    })\n\n}"]}