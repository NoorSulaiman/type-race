{"version":3,"sources":["../src/index.js"],"names":["dotenv","config","app","use","bodyParser","json","mongoose","Promise","connect","process","env","MONGODB_URL","auth","users","get","req","res","sendFile","path","join","__dirname","io","listen","console","log","players","guests","on","socket","user"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AAGAA,iBAAOC,MAAP;AACA,IAAMC,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAC,mBAASC,OAAT,GAAmBA,kBAAnB;AACAD,mBAASE,OAAT,CAAiBC,QAAQC,GAAR,CAAYC,WAA7B;;AAEAT,IAAIC,GAAJ,CAAQ,WAAR,EAAqBS,cAArB;AACAV,IAAIC,GAAJ,CAAQ,YAAR,EAAsBU,eAAtB;;AAEAX,IAAIY,GAAJ,CAAQ,IAAR,EAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxBA,QAAIC,QAAJ,CAAaC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAAb;AACH,CAFD;;AAIA,IAAIC,KAAK,sBAAOnB,IAAIoB,MAAJ,CAAW,IAAX,EAAiB;AAAA,WAAMC,QAAQC,GAAR,CAAY,4BAAZ,CAAN;AAAA,CAAjB,CAAP,CAAT;;AAGA,IAAIC,UAAU,EAAd;AACA,IAAIC,SAAS,EAAb;;AAEAL,GAAGM,EAAH,CAAM,YAAN,EAAoB,UAAUC,MAAV,EAAkB;AAClCA,WAAOD,EAAP,CAAU,MAAV,EAAkB;AAAA,eAAQ,wBAASE,IAAT,EAAeJ,OAAf,EAAwBC,MAAxB,EAAgCE,MAAhC,CAAR;AAAA,KAAlB;AACAA,WAAOD,EAAP,CAAU,YAAV,EAAwB,YAAM;AAC1B,kDAAkBC,MAAlB,EAA0BH,OAA1B,EAAmCC,MAAnC;AACH,KAFD;AAGAE,WAAOD,EAAP,CAAU,eAAV,EAA2B,YAAM;AAC7B,4CAAeC,MAAf,EAAuBH,OAAvB;AACH,KAFD;AAGAG,WAAOD,EAAP,CAAU,iBAAV,EAA6B,YAAM;AAC/B,kDAAkBC,MAAlB,EAA0BH,OAA1B,EAAmCC,MAAnC;AACH,KAFD;AAIH,CAZD","file":"index.js","sourcesContent":["import express from 'express';\nimport path from 'path';\nimport mongoose from 'mongoose';\nimport bodyParser from 'body-parser';\nimport dotenv from 'dotenv';\nimport Promise from 'bluebird';\nimport socket from 'socket.io';\nimport auth from './routes/auth';\nimport users from './routes/users';\nimport { typeRace } from './typeRace/typeRace';\nimport { disconnectHandler } from './typeRace/handlers/disconnectHandler';\nimport { endGameHandler } from './typeRace/handlers/endGameHandler';\n\n\ndotenv.config()\nconst app = express();\napp.use(bodyParser.json())\nmongoose.Promise = Promise\nmongoose.connect(process.env.MONGODB_URL);\n\napp.use(\"/api/auth\", auth);\napp.use(\"/api/users\", users);\n\napp.get('*/', (req, res) => {\n    res.sendFile(path.join(__dirname, 'index.html'))\n})\n\nlet io = socket(app.listen(8080, () => console.log('running on local host 8080')))\n\n\nlet players = [];\nlet guests = [];\n\nio.on('connection', function (socket) {\n    socket.on('join', user => typeRace(user, players, guests, socket))\n    socket.on('disconnect', () => {\n        disconnectHandler(socket, players, guests)\n    })\n    socket.on('deletePlayers', () => {\n        endGameHandler(socket, players)\n    })\n    socket.on('endGameByPlayer', () => {\n        disconnectHandler(socket, players, guests)\n    })\n\n})\n\n"]}